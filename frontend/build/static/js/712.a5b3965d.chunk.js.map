{"version":3,"file":"static/js/712.a5b3965d.chunk.js","mappings":"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","sources":["features/journey/journeyApi.js","pages/Journey.js","utils/utils.js"],"sourcesContent":["//doc:\n// https://redux-toolkit.js.org/rtk-query/usage/queries\n//https://redux-toolkit.js.org/rtk-query/usage/mutations\n\nimport apiSlice from '../api/apiSlice'\n\n// INJECT END POINTS WITH API SLICE\nexport const journeyApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getJourney: builder.query({\n      query: (url) => `/journey/all${url}`\n    }),\n    addJourney: builder.mutation({\n      query: ({ data, arg }) => ({\n        url: '/journey/create',\n        method: 'POST',\n        body: data\n      }),\n      async onQueryStarted(arg, { queryFulfilled, dispatch }) {\n\n      }\n    }),\n    deleteJourney: builder.mutation({\n      query: ({ id, url }) => ({\n        url: `/journey/${id}`,\n        method: 'DELETE'\n      }),\n      async onQueryStarted(arg, { queryFulfilled, dispatch }) {\n\n      }\n    })\n  })\n})\n\nexport const { useAddJourneyMutation, useDeleteJourneyMutation, useGetJourneyQuery } = journeyApi","import { Box, Card, Container, Pagination, Stack, Typography } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport React, { Fragment, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { journeyPagination, journeySearch } from '../features/filter/filterSlice';\nimport { useGetJourneyQuery } from '../features/journey/journeyApi';\nimport { meterToKm, secondsToHours } from '../utils/utils';\nimport './Journey.scss';\n\nconst Journey = () => {\n\n  const dispatch = useDispatch();\n  const debounceHandler = (fn, delay) => {\n    let timeoutId;\n    return (arg) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n      timeoutId = setTimeout(() => {\n        fn(arg)\n      }, delay);\n    }\n  };\n\n  const doSearch = (text) => {\n    dispatch(journeySearch(text))\n  };\n\n  // SEARCH FUNCTION\n  const handleSearch = debounceHandler(doSearch, 500);\n\n  // PAGINATION FUNCTION & STATE\n  const [page, setPage] = useState(1);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n    dispatch(journeyPagination(value));\n  };\n\n  const query = useSelector(state => state.filter);\n\n  // CREATED A QUERY STRING FOR SEARCH\n  let queryStr = `?page=${query?.journeyPage}`;\n\n  if (query?.journeySearch !== undefined) {\n    queryStr = `?keyword=${query?.journeySearch}&page=${query?.journeyPage}`;\n  } else if (query?.journeySearch && query?.journeyPage) {\n    queryStr = `?keyword=${query?.journeySearch}&page=${query?.journeyPage}`;\n  } else {\n    queryStr = `?page=${query?.journeyPage}`;\n  }\n\n  const { data, isLoading } = useGetJourneyQuery(queryStr);\n\n  const columns = [\n    {\n      field: \"_id\", headerName: \"ID\", winWidth: 100, flex: 0.2,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Typography>\n               {(params?.row?._id).slice(15)}\n            </Typography>\n          </Fragment>\n        )\n      }\n      },\n    {\n      field: \"departure_station_name\", headerName: \"Departure Name\", winWidth: 120, flex: 0.3\n    },\n    {\n      field: \"return_station_name\", headerName: \"Return Name\", winWidth: 120, flex: 0.3\n    },\n    {\n      field: \"covered_distance\", headerName: \"Distance (Km)\", winWidth: 120, flex: 0.2,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Typography>\n               {meterToKm(params?.row?.covered_distance).toFixed(1)} Km\n            </Typography>\n          </Fragment>\n        )\n      }\n    },\n    {\n      field: \"duration\", headerName: \"Duration (s)\", winWidth: 100, flex: 0.2,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Typography>\n               {secondsToHours(params?.row?.duration)}\n            </Typography>\n          </Fragment>\n        )\n      }\n    },\n    {\n      field: \"departure\", headerName: \"Departure Time\", winWidth: 100, flex: 0.2,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Typography>\n               {(new Date(params?.row?.return)).toLocaleDateString()}\n            </Typography>\n          </Fragment>\n        )\n      }\n    },\n    {\n      field: \"return\", headerName: \"Return Time\", winWidth: 100, flex: 0.2,\n      renderCell: (params) => {\n        return (\n          <Fragment>\n            <Typography>\n               {(new Date(params?.row?.return)).toLocaleDateString()}\n            </Typography>\n          </Fragment>\n        )\n      }\n    },\n  ]\n\n  return (\n    <Container>\n      <div className='journey-page--search-section'>\n          <form action=\"\" onSubmit={(e) => e.preventDefault()}>\n             <div className='journey-page--search-section--div'>\n                <input\n                    type=\"search\" placeholder='search by departure station name'\n                    onChange={({ target }) => handleSearch(target.value)}\n                    onBlur={({ target }) => handleSearch(target.value)}\n                />\n                <button type=\"submit\"><i className=\"fa-solid fa-magnifying-glass\"></i></button>\n             </div>\n          </form>\n        </div>\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" mb={1}>\n        <Typography variant=\"h5\" fontWeight=\"bold\" color=\"#C73866\" gutterBottom>\n            Journey list view\n        </Typography>\n      </Stack>\n      <Card>\n        <Box\n          sx={{\n            minHeight: 400,\n            width: 1\n          }}\n        >\n          <DataGrid\n              loading={!data?.journey?.length || isLoading}\n              getRowId={(row) => row?._id}\n              columns={columns}\n              pageSize={100}\n              autoHeight\n              rows={data?.journey || []}\n          />\n        </Box>\n      </Card>\n      <div className=\"station-page--pagination\">\n        {\n          data?.journey?.length === 100 ? <Pagination count={Math.round(data?.totalJourney / 100) || 0} variant=\"outlined\" color=\"primary\" page={page} onChange={handleChange} /> : \"\"\n        }\n      </div>\n    </Container>\n  );\n};\n\nexport default Journey;","// METER TO KILOMETER\nexport const meterToKm = (meter) => {\n    const km = Math.round(meter / 100) / 10;\n    return km;\n};\n\n// SECONDS TO HOURS MINUTES SECONDS\nexport const secondsToHours = (seconds) => {\n    const date = new Date(null);\n    date.setSeconds(seconds);\n    const hhmmssFormat = date.toISOString().substr(11, 8);\n\n    return hhmmssFormat;\n};\n\n// CALCULATE COVERED DISTANCE\nexport const calculateCoveredDistance = (array = []) => {\n    const totalDistance = array.reduce((accumulator, currentValue) => accumulator + currentValue?.covered_distance, 0);\n\n    const result = (meterToKm(totalDistance) / array?.length).toFixed(2);\n\n    return result;\n}\n\n// FIND TOP 5 MOST POPULAR RETURN STATION\nexport const getMostPopularReturnStation = (array = []) => {\n    const stations = Object.values(array.reduce((a, { return_station_name }) => {\n        a[return_station_name] = a[return_station_name] || { return_station_name, count: 0 };\n        a[return_station_name].count++;\n        return a;\n    }, Object.create(null)));\n\n    const sortedArray = [...stations].sort((a, b) => b.count - a.count);\n\n    return sortedArray?.slice(0, 5);\n}\n\n// FIND TOP 5 MOST POPULAR STARTING STATION\nexport const getMostPopularStartingStation = (array = []) => {\n    console.log(\"array\", array)\n    const stations = Object.values(array.reduce((a, { departure_station_name }) => {\n        a[departure_station_name] = a[departure_station_name] || { departure_station_name, count: 0 };\n        a[departure_station_name].count++;\n        return a;\n    }, Object.create(null)));\n\n    const sortedArray = [...stations].sort((a, b) => b.count - a.count);\n\n    return sortedArray?.slice(0, 5);\n}"],"names":["journeyApi","apiSlice","endpoints","builder","getJourney","query","url","addJourney","mutation","data","arg","method","body","onQueryStarted","queryFulfilled","dispatch","deleteJourney","id","useGetJourneyQuery","useAddJourneyMutation","useDeleteJourneyMutation","useDispatch","handleSearch","fn","delay","timeoutId","clearTimeout","setTimeout","debounceHandler","text","journeySearch","useState","page","setPage","useSelector","state","filter","queryStr","journeyPage","undefined","isLoading","columns","field","headerName","winWidth","flex","renderCell","params","Fragment","Typography","row","_id","slice","meterToKm","covered_distance","toFixed","secondsToHours","duration","Date","return","toLocaleDateString","Container","className","action","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onBlur","Stack","direction","alignItems","justifyContent","mb","variant","fontWeight","color","gutterBottom","Card","Box","sx","minHeight","width","DataGrid","loading","journey","length","getRowId","pageSize","autoHeight","rows","Pagination","count","Math","round","totalJourney","event","journeyPagination","meter","seconds","date","setSeconds","toISOString","substr","calculateCoveredDistance","array","totalDistance","reduce","accumulator","currentValue","result","getMostPopularReturnStation","stations","Object","values","a","return_station_name","create","sortedArray","sort","b","getMostPopularStartingStation","console","log","departure_station_name"],"sourceRoot":""}