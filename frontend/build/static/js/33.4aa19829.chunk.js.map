{"version":3,"file":"static/js/33.4aa19829.chunk.js","mappings":"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","sources":["components/loader/CardLoading.js","components/station/StationCard.js","components/station/Station.js","features/station/stationApi.js","components/common/Header.js","pages/Home.js"],"sourcesContent":["import { Card, Grid, Skeleton } from '@mui/material';\nimport React from 'react';\n\nconst CardLoading = () => {\n    return (\n        <Grid item xs={8} md={6} lg={3}>\n            <Card style={{padding: '1rem'}}>\n                <Skeleton variant=\"text\" sx={{ fontSize: '2rem' }} />\n                <Skeleton variant=\"text\" sx={{ fontSize: '2rem' }} />\n                <Skeleton variant=\"text\" sx={{ fontSize: '2rem' }} />\n            </Card>\n        </Grid>\n    );\n};\n\nexport default CardLoading;","import { Card, Grid, Typography } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './StationCard.scss';\n\nconst StationCard = ({ item }) => {\n\n    return (\n        <Grid item xs={12} md={6} lg={3}>\n            <Link to={`/station/${item?._id}`}>\n                <Card className=\"station-card\">\n                    <Typography gutterBottom variant=\"body2\" component=\"div\">\n                        <b>ID:</b> {item?.id}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"div\">\n                        <b>Name:</b> {item?.name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body2\" component=\"div\">\n                        <b>Operaattor:</b> {item?.operaattor}\n                    </Typography>\n                </Card>\n            </Link>\n        </Grid>\n    );\n};\n\nexport default StationCard;","import { Container, Grid, Pagination, Stack, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { pagination, search } from '../../features/filter/filterSlice';\nimport { useGetStationsQuery } from '../../features/station/stationApi';\nimport CardLoading from '../loader/CardLoading';\nimport './Station.scss';\nimport StationCard from './StationCard';\n\nconst Station = () => {\n\n    const dispatch = useDispatch();\n    const debounceHandler = (fn, delay) => {\n        let timeoutId;\n        return (arg) => {\n            if (timeoutId) {\n                clearTimeout(timeoutId)\n            }\n            timeoutId = setTimeout(() => {\n                fn(arg)\n            }, delay);\n        }\n    };\n\n    const doSearch = (text) => {\n        dispatch(search(text))\n    };\n\n    const handleSearch = debounceHandler(doSearch, 500);\n\n    const [page, setPage] = useState(1);\n    const handleChange = (event, value) => {\n        setPage(value);\n        dispatch(pagination(value));\n    };\n\n    const query = useSelector(state => state.filter);\n\n    let queryStr = `?page=${query?.page}`;\n\n    if (query?.search !== undefined) {\n        queryStr = `?keyword=${query?.search}&page=${query?.page}`;\n    } else if (query?.search && query?.search) {\n        queryStr = `?keyword=${query?.search}&page=${query?.page}`;\n    } else {\n        queryStr = `?page=${query?.page}`;\n    }\n\n\n    const { data, isLoading, isError, error } = useGetStationsQuery(queryStr);\n\n    // thinking what can be displayed\n    let content;\n\n    if(isLoading) {\n        content = [...new Array(40)].map((item, i) => (\n            <CardLoading key={i} />\n        ))\n    }\n\n    if(!isLoading && isError) content = <div>{error?.message}</div>\n\n    if(!isLoading && !isError && data?.stations?.length === 0) content = <div>data not found...</div>\n\n    if(!isLoading && !isError && data?.stations?.length !== 0) {\n        content = data?.stations?.map((station, i) => (\n            <StationCard key={station?._id} item={station} />\n        ))\n    }\n\n    return (\n        <Container>\n            <div className='station-page'>\n                <div className='station-page--search-section'>\n                    <form action=\"\" onSubmit={(e) => e.preventDefault()}>\n                        <div className='station-page--search-section--div'>\n                            <input\n                                type=\"search\" placeholder='search by station name'\n                                onChange={({ target }) => handleSearch(target.value)}\n                                onBlur={({ target }) => handleSearch(target.value)}\n                            />\n                            <button type=\"submit\"><i className=\"fa-solid fa-magnifying-glass\"></i></button>\n                        </div>\n                    </form>\n                </div>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"center\" mb={1}>\n                   <Typography variant=\"h5\" gutterBottom>\n                       Stations\n                   </Typography>\n                </Stack>\n                <Grid container spacing={2}>\n                    {content}\n                </Grid>\n                <div className=\"station-page--pagination\">\n                    {\n                       data?.stations?.length === 100 ? <Pagination count={Math.round(data?.totalStations / 100) || 0} variant=\"outlined\" color=\"primary\" page={page} onChange={handleChange} /> : \"\"\n                    }\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Station;\n","//doc:\n// https://redux-toolkit.js.org/rtk-query/usage/queries\n//https://redux-toolkit.js.org/rtk-query/usage/mutations\n\nimport apiSlice from \"../api/apiSlice\";\n\n// INJECT END WITH API SLICE\nexport const stationApi = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        getStations: builder.query({\n            query: (url) => `/station/all${url}`\n        }),\n        getStationDetails: builder.query({\n            query: (id) => `/station/${id}`\n        }),\n        addStation: builder.mutation({\n            query: ({data, url}) => ({\n                url: '/station/create',\n                method: 'POST',\n                body: data\n            }),\n            async onQueryStarted(arg, {queryFulfilled, dispatch}) {\n\n            }\n        }),\n        deleteStation: builder.mutation({\n            query: ({id, url}) => ({\n                url: `/station/${id}`,\n                method: 'DELETE'\n            }), async onQueryEnded(arg, {queryFulfilled, dispatch}) {\n\n            }\n        })\n    })\n});\n\nexport const {useAddStationMutation, useDeleteStationMutation, useGetStationDetailsQuery, useGetStationsQuery} = stationApi;","import { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport headerImg from './../../image/c2.gif';\nimport './Header.scss';\n\nconst Header = () => {\n    return (\n        <header className='header'>\n            <Container>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6} lg={6} >\n                        <div className=\"header--content\">\n                            <h1>Helsinki City-Bike</h1>\n                            <p>Welcome to use city bikes! City bikes are available in Helsinki and Espoo from the beginning of April to the end of October. Enjoy your ride!</p>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={6}>\n                        <div className=\"header--image\">\n                            <img src={headerImg} alt=\"\" />\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n        </header>\n    );\n};\n\nexport default Header;","import React, { Fragment } from 'react';\nimport Header from '../components/common/Header';\nimport Station from '../components/station/Station';\n\n\nconst Home = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Station />\n    </Fragment>\n  );\n};\n\nexport default Home;"],"names":["Grid","item","xs","md","lg","Card","style","padding","Skeleton","variant","sx","fontSize","to","_id","className","Typography","gutterBottom","component","id","name","operaattor","dispatch","useDispatch","handleSearch","fn","delay","timeoutId","arg","clearTimeout","setTimeout","debounceHandler","text","search","useState","page","setPage","query","useSelector","state","filter","queryStr","undefined","content","useGetStationsQuery","data","isLoading","isError","error","Array","map","i","message","stations","length","station","Container","action","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onBlur","Stack","direction","alignItems","justifyContent","mb","container","spacing","Pagination","count","Math","round","totalStations","color","event","pagination","stationApi","apiSlice","endpoints","builder","getStations","url","getStationDetails","addStation","mutation","method","body","onQueryStarted","queryFulfilled","deleteStation","onQueryEnded","useGetStationDetailsQuery","useAddStationMutation","useDeleteStationMutation","src","headerImg","alt","Fragment","Station"],"sourceRoot":""}